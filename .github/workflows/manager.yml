name: Repository Manager
on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    if: github.repository == 'Katsute/Repository-Manager'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}

      - name: Print Debug
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.token }}
          script: core.info(require("util").inspect(context, true, 6));

  create:
    name: Branch Rename
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && github.ref_type == 'branch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}

      - name: Parse Branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.token }}
          script: |
            if(context.payload.ref.endsWith('@')){
              const sha = (await github.rest.repos.getCommit({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                ref: context.payload.ref
              })).data.sha.substring(0, 7);

              core.exportVariable("branch", context.payload.ref + sha);
              core.exportVariable("type", "sha");
            }else if(context.payload.ref.startsWith('!')){
              core.exportVariable("branch", context.payload.ref.substring(1));
              core.exportVariable("type", "orphan");
            }

      - name: Create SHA Branch
        if: env.type == 'sha'
        env:
          ref: ${{ github.ref }}
          branch: ${{ env.branch }}
        run: |
          git branch -m $ref $branch
          git push

      - name: Create Orphan Branch
        if: env.type == 'orphan'
        env:
          ref: ${{ github.ref }}
          branch: ${{ env.branch }}
        run: |
          git branch -d $ref
          git checkout --orphan $branch
          git rm -rf .
          git commit --allow-empty -m 'Initial commit'
          git push

  issue:
    name: Issue Locking
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}

      - name: Issue Lock
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          ISSUE: ${{ github.event.issue && 'issue' || 'pr' }}
          NUMBER: ${{ github.event.issue && github.event.issue.number || github.event.pull_request.number }}
          LOCK: ${{ github.event.action == 'closed' && 'lock' || 'unlock' }}
        run: gh $ISSUE $LOCK $NUMBER